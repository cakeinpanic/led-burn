{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/flamingo/controller-button/controller-button.component.ts","./src/app/flamingo/controller-button/controller-button.component.html","./src/app/flamingo/controller/controller.component.ts","./src/app/flamingo/controller/controller.component.html","./src/app/flamingo/flamingo.component.html","./src/app/flamingo/flamingo.component.ts","./src/app/services/enums.ts","./src/app/services/flamingo-store.service.ts","./src/app/services/java.service.ts","./src/app/services/stage-store.service.ts","./src/app/stage/code-doalog/code-doalog.component.ts","./src/app/stage/code-doalog/code-doalog.component.html","./src/app/stage/music/music.component.ts","./src/app/stage/music/music.component.html","./src/app/stage/stage-button/stage-button.component.ts","./src/app/stage/stage-button/stage-button.component.html","./src/app/stage/stage.component.html","./src/app/stage/stage.component.ts","./src/app/status/status.component.ts","./src/app/status/status.component.html","./src/app/tabs/tabs.component.ts","./src/app/tabs/tabs.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FlamingoService } from './services/flamingo-store.service';\nimport { JavaService } from './services/java.service';\nimport { StageService } from './services/stage-store.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\tonStage = false;\n\tnoAndroid = false;\n\n\tconstructor(private java: JavaService, private flamingoService: FlamingoService, private stageService: StageService) {}\n\n\tngOnInit() {\n\t\tthis.noAndroid = !this.java.checkAndroid();\n\t\tthis.java.requestStatus();\n\n\t\tthis.java.androidMessage.subscribe(t => {\n\t\t\tt.split(',').forEach(this.handleAndroidMessage.bind(this));\n\t\t});\n\t}\n\n\thandleAndroidMessage(t: string) {\n\t\tconst [signalType, signalBody] = t.split('=');\n\n\t\tconst signalSubType = signalType[0];\n\t\tconsole.log(signalType, signalBody, signalSubType);\n\t\tswitch (signalSubType) {\n\t\t\tcase 'P':\n\t\t\t\tthis.flamingoService.setColorFromSignal(signalBody);\n\t\t\t\tbreak;\n\t\t\tcase 'A':\n\t\t\t\tthis.stageService.setApplianceStatusFromSignal(+signalType.substring(1), signalBody);\n\t\t\t\tbreak;\n\t\t\tcase 'F':\n\t\t\t\tthis.flamingoService.setFlamingoFromSignal(signalBody);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tconst arr: {name: string, code: string}[] = JSON.parse(signalBody);\n\t\t\t\tarr.forEach(({ name, code }) => this.stageService.setNewApplianceCode({ name, newCode: +code }));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgoToStage(isStage: boolean) {\n\t\tthis.onStage = isStage;\n\t}\n}\n","<div class=\"android\" *ngIf=\"noAndroid\">Did not connect to java app</div>\n<div class=\"nav\">\n  <div class=\"tab\" [class.selected]=\"onStage\" (click)=\"goToStage(true)\"><span>Stage</span></div>\n  <div class=\"tab\" [class.selected]=\"!onStage\" (click)=\"goToStage(false)\"><span>Flamingo</span></div>\n</div>\n\n<app-stage *ngIf=\"onStage\"></app-stage>\n<app-flamingo *ngIf=\"!onStage\"></app-flamingo>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { AppComponent } from './app.component';\nimport { ControllerButtonComponent } from './flamingo/controller-button/controller-button.component';\nimport { ControllerComponent } from './flamingo/controller/controller.component';\nimport { FlamingoComponent } from './flamingo/flamingo.component';\nimport { FlamingoStore } from './services/flamingo-store.service';\nimport { CodeDoalogComponent } from './stage/code-doalog/code-doalog.component';\nimport { MusicComponent } from './stage/music/music.component';\nimport { StageButtonComponent } from './stage/stage-button/stage-button.component';\n\nimport { StageComponent } from './stage/stage.component';\nimport { StatusComponent } from './status/status.component';\nimport { TabsComponent } from './tabs/tabs.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tControllerComponent,\n\t\tControllerButtonComponent,\n\t\tStageComponent,\n\t\tFlamingoComponent,\n\t\tTabsComponent,\n\t\tStatusComponent,\n\t\tMusicComponent,\n\t\tStageButtonComponent,\n\t\tCodeDoalogComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tMatMenuModule,\n\t\tMatDialogModule, NoopAnimationsModule,\n\t\tMatInputModule,\n\t\tMatIconModule,\n\t\tReactiveFormsModule,\n\t\tMatButtonModule,\n\t\tHttpClientModule\n\t],\n\tproviders: [FlamingoStore],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, HostListener, Input, OnInit } from '@angular/core';\nimport { map, Observable, Subject, takeUntil, tap } from 'rxjs';\nimport { COLORS } from '../../services/enums';\nimport { FlamingoService, FlamingQuery } from '../../services/flamingo-store.service';\n\nconst COLOR_CODES: { [key: string]: string } = {\n\t[COLORS.RED]: '#FF4949',\n\t[COLORS.BLUE]: '#1E89EB',\n\t[COLORS.YELLOW]: '#F4EB12',\n\t[COLORS.WHITE]: '#FFFFFF',\n\t[COLORS.GREEN]: '#00FF0A'\n};\n\n@Component({\n\tselector: 'app-controller-button',\n\ttemplateUrl: './controller-button.component.html',\n\tstyleUrls: ['./controller-button.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControllerButtonComponent implements OnInit {\n\t@Input() color: COLORS;\n\t@Input() controllerIndex: string;\n\t@HostBinding('class.on') isColorOn: boolean = false;\n\n\tisControllerOn: boolean | null;\n\tdestroy$ = new Subject<void>();\n\n\tconstructor(\n\t\tprivate flamingoService: FlamingoService,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tprivate flamingQuery: FlamingQuery) { }\n\n\tget colorCode(): string {\n\t\treturn COLOR_CODES[this.color];\n\t}\n\n\t@HostListener('click')\n\tonClick() {\n\t\tif (this.isControllerOn) {\n\t\t\tthis.flamingoService.setColor(this.controllerIndex, this.color);\n\t\t}\n\t}\n\n\tngOnInit(): void {\n\t\tthis.flamingQuery\n\t\t\t.controller$(this.controllerIndex)\n\t\t\t.pipe(takeUntil(this.destroy$))\n\t\t\t.subscribe(({ colors, isOn }) => {\n\t\t\t\tthis.isControllerOn= isOn\n\t\t\t\tthis.isColorOn = !!colors[this.color] && isOn;\n\t\t\t\tthis.cd.detectChanges()\n\t\t\t});\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.destroy$.next();\n\t}\n\n}\n","<div class=\"color-circle\" [style]=\"{background :colorCode}\">\n  <svg>\n    <use xlink:href=\"#btn\"></use>\n  </svg>\n</div>\n<app-status *ngIf=\"isControllerOn\" [isOn]=\"isColorOn\"></app-status>\n","import { ChangeDetectorRef, Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { map, Observable, pipe, startWith, tap } from 'rxjs';\nimport { COLORS } from '../../services/enums';\nimport { ControllerColors, FlamingoService, FlamingQuery } from '../../services/flamingo-store.service';\n\n@Component({\n\tselector: 'app-controller',\n\ttemplateUrl: './controller.component.html',\n\tstyleUrls: ['./controller.component.scss']\n})\nexport class ControllerComponent implements OnInit {\n\t@Input() name = 'Controller 1';\n\t@Input() controllerIndex: string;\n\n\tisOn$: Observable<boolean>;\n\tcolors: ControllerColors;\n\tCOLORS = COLORS;\n\n\tconstructor(private flamingQuery: FlamingQuery, private flamingoService: FlamingoService, private cd: ChangeDetectorRef) { }\n\n\tngOnInit(): void {\n\t\tthis.isOn$ = this.flamingQuery.controller$(this.controllerIndex)\n\t\t\t.pipe(map(c => c.isOn));\n\t}\n\n\ttoggleController() {\n\t\tthis.flamingoService.toggleController(this.controllerIndex)\n\t}\n\n}\n","<div class=\"name\">{{name}}</div>\n<button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"menu-button\">\n  <svg>  <use xlink:href=\"#dots\"></use></svg>\n</button>\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item (click)=\"toggleController()\">\n    <span *ngIf=\"isOn$ | async\">Turn Off</span>\n    <span *ngIf=\"!(isOn$ | async)\">Turn on</span>\n  </button>\n</mat-menu>\n<app-status [isOn]=\"isOn$ | async\"></app-status>\n<div class=\"buttons\">\n  <app-controller-button [color]=\"COLORS.GREEN\" [controllerIndex]=\"controllerIndex\"></app-controller-button>\n  <app-controller-button [color]=\"COLORS.YELLOW\" [controllerIndex]=\"controllerIndex\"></app-controller-button>\n  <app-controller-button [color]=\"COLORS.BLUE\" [controllerIndex]=\"controllerIndex\"></app-controller-button>\n  <app-controller-button [color]=\"COLORS.RED\" [controllerIndex]=\"controllerIndex\"></app-controller-button>\n  <app-controller-button [color]=\"COLORS.WHITE\" [controllerIndex]=\"controllerIndex\"></app-controller-button>\n</div>\n","<div class=\"flamingo\">\n  <svg [matMenuTriggerFor]=\"menu\" class=\"icon\" [class.on]=\"flamingo$ | async\">\n    <use xlink:href=\"#flamingo\"></use>\n  </svg>\n  <mat-menu #menu=\"matMenu\" xPosition=\"after\">\n    <button mat-menu-item (click)=\"toggleFlamingo()\">\n      <span *ngIf=\"flamingo$ | async\">Turn Off</span>\n      <span *ngIf=\"!(flamingo$ | async)\">Turn on</span>\n    </button>\n  </mat-menu>\n  <div>Flamingo</div>\n</div>\n<app-controller class=\"controller\" name=\"Controller 1\" controllerIndex=\"1\"></app-controller>\n<app-controller class=\"controller\" name=\"Controller 2\" controllerIndex=\"2\"></app-controller>\n<app-controller class=\"controller\" name=\"Controller 3\" controllerIndex=\"3\"></app-controller>\n<app-controller class=\"controller\" name=\"Controller 4\" controllerIndex=\"4\"></app-controller>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FlamingoService, FlamingQuery } from '../services/flamingo-store.service';\n\n@Component({\n\tselector: 'app-flamingo',\n\ttemplateUrl: './flamingo.component.html',\n\tstyleUrls: ['./flamingo.component.scss']\n})\nexport class FlamingoComponent implements OnInit {\n\tflamingo$ = this.flamingQuery.flamingo$;\n\n\tconstructor(private flamingQuery: FlamingQuery, private flamingoService: FlamingoService) { }\n\n\tngOnInit(): void {\n\t}\n\ttoggleFlamingo(){\n\t\tthis.flamingoService.toggleFlamingo()\n\t}\n}\n","export enum COLORS {\n\tRED = 'red',\n\tYELLOW = 'yellow',\n\tBLUE = 'blue',\n\tGREEN = 'green',\n\tWHITE = 'white'\n}\n\nexport const ORDERED_COLORS = [\n\tCOLORS.RED,\n\tCOLORS.GREEN,\n\tCOLORS.BLUE,\n\tCOLORS.YELLOW,\n\tCOLORS.WHITE\n];\n","import { Injectable } from '@angular/core';\nimport { Query, Store, StoreConfig } from '@datorama/akita';\nimport { map, Observable } from 'rxjs';\nimport { COLORS, ORDERED_COLORS } from './enums';\nimport { JavaService } from './java.service';\n\nexport interface ControllerColors {\n\t[COLORS.RED]: number | boolean;\n\t[COLORS.BLUE]: number | boolean;\n\t[COLORS.GREEN]: number | boolean;\n\t[COLORS.YELLOW]: number | boolean;\n\t[COLORS.WHITE]: number | boolean;\n}\n\nexport interface Controller {\n\tcolors: ControllerColors,\n\tisOn: boolean\n}\n\nexport interface FlamingoState {\n\tcontroller1: Controller;\n\tcontroller2: Controller;\n\tcontroller3: Controller;\n\tcontroller4: Controller;\n\tflamingo: boolean;\n}\n\nexport function createInitialState(): FlamingoState {\n\tconst colorsState: ControllerColors = {\n\t\tred: false,\n\t\tblue: false,\n\t\tgreen: false,\n\t\tyellow: false,\n\t\twhite: false,\n\t};\n\treturn {\n\t\tcontroller1: { isOn: false, colors: { ...colorsState } },\n\t\tcontroller2: { isOn: true, colors: { ...colorsState } },\n\t\tcontroller3: { isOn: true, colors: { ...colorsState } },\n\t\tcontroller4: { isOn: true, colors: { ...colorsState } },\n\t\tflamingo: false\n\t};\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FlamingQuery extends Query<FlamingoState> {\n\tconstructor(protected override store: FlamingoStore) {\n\t\tsuper(store);\n\t}\n\n\tall$ = this.select();\n\n\tflamingo$ = this.select('flamingo');\n\n\tcontroller$(controllerIndex: number | string): Observable<Controller> {\n\t\treturn this.select('controller' + controllerIndex as any) as Observable<Controller>;\n\t}\n\n\tisColorOn$(controllerIndex: number | string, color: COLORS): Observable<boolean> {\n\t\treturn this.controller$(controllerIndex).pipe(map(c => !!c.colors[color]));\n\t}\n}\n\n@StoreConfig({ name: 'flamingo' })\n@Injectable({ providedIn: 'root' })\nexport class FlamingoStore extends Store<FlamingoState> {\n\tconstructor() {\n\t\tsuper(createInitialState());\n\t}\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FlamingoService {\n\tconstructor(private store: FlamingoStore, private javaService: JavaService) {\n\n\t}\n\n\ttoggleFlamingo() {\n\t\tthis.javaService.sendToAndroid(`F=${this.store.getValue().flamingo? '0': '1'}`);\n\t}\n\n\ttoggleController(controllerIndex: number | string,) {\n\t\tconst keyName = 'controller' + controllerIndex;\n\t\tconst colors = {} as ControllerColors;\n\t\tORDERED_COLORS.forEach((color) => {\n\t\t\tcolors[color] = false;\n\t\t});\n\n\t\t// reset all colors\n\t\t//this.javaService.sendToAndroid(\n\t\t//\t`P=${[\n\t\t//\t\tcontrollerIndex,\n\t\t//\t\t...ORDERED_COLORS.map(c => 0)\n\t\t//\t].join('')}`);\n\n\t\tthis.store.update(state => {\n\t\t\tconst controllerState = (this.store.getValue() as any)[keyName] as Controller;\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\t[keyName]: { colors, isOn: !controllerState.isOn }\n\t\t\t};\n\t\t\treturn newState;\n\t\t});\n\t}\n\n\tsetFlamingoFromSignal(status: string) {\n\t\tthis.store.update(state => {\n\t\t\treturn { ...state, flamingo: status === '1' };\n\t\t});\n\t}\n\n\tsetColor(controllerIndex: number | string, color: COLORS) {\n\t\tconst keyName = 'controller' + controllerIndex;\n\t\tconst controllerState = (this.store.getValue() as any)[keyName] as Controller;\n\n\t\tthis.javaService.sendToAndroid(\n\t\t\t`P=${[\n\t\t\t\tcontrollerIndex,\n\t\t\t\t...ORDERED_COLORS.map(c => {\n\t\t\t\t\tconst colorTooConvert = c === color ? !controllerState.colors[c] : controllerState.colors[c];\n\t\t\t\t\treturn colorTooConvert ? 1 : 0;\n\t\t\t\t})\n\t\t\t].join('')}`);\n\n\t}\n\n\tsetColorFromSignal(signal: string) {\n\t\tconst controllerIndex = signal[0];\n\t\tconst keyName = 'controller' + controllerIndex;\n\t\tconst colors = {} as ControllerColors;\n\t\tORDERED_COLORS.forEach((color, index) => {\n\t\t\tcolors[color] = signal[index + 1] === '1';\n\t\t});\n\n\t\tthis.store.update(state => {\n\t\t\tconst controllerState = (this.store.getValue() as any)[keyName] as Controller;\n\t\t\tconst newState = {\n\t\t\t\t...state,\n\t\t\t\t[keyName]: { ...controllerState, colors } as Controller\n\t\t\t};\n\t\t\treturn newState;\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class JavaService {\n\tandroidMessage = new Subject<string>();\n\tAndroid: any;\n\n\tconstructor() {\n\t\t(window as any)['getFromAndroid'] = this.getFromAndroid.bind(this);\n\t}\n\n\tcheckAndroid(): boolean {\n\t\tthis.Android = (window as any)['Android'];\n\t\treturn !!this.Android;\n\t}\n\n\tsaveCodes(object: any) {\n\t\tthis.sendToAndroid(`Q=${JSON.stringify(object)}`);\n\t}\n\n\trequestStatus() {\n\t\tthis.sendToAndroid('status');\n\t}\n\n\tsendToAndroid(message: string) {\n\t\tconsole.log('sent to android: ', message);\n\t\tthis.androidMessage.next(message);\n\t\tif (this.Android) {\n\t\t\tthis.Android.sendMeEvent(message);\n\t\t}\n\t}\n\n\tgetFromAndroid(s: string) {\n\t\tthis.androidMessage.next(s);\n\t\tthis.sendToAndroid('Got from android' + s);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Query, Store, StoreConfig } from '@datorama/akita';\nimport { cloneDeep as _cloneDeep } from 'lodash';\nimport { map, Observable } from 'rxjs';\nimport { JavaService } from './java.service';\n\nconst appliancesNames = [\n\t'Rainbow',\n\t'Easter',\n\t'Stage off',\n\t'Runway',\n\t'More',\n\t'Color',\n\t'Light1',\n\t'Light2',\n\t'Garland1',\n\t'Garland2',\n\t'Whatever',\n\t'Whatever2',\n\t'Whatever3',\n\t'Whatever4',\n];\n\nexport interface ButtonState {\n\tname: string,\n\tcode: number,\n\ton: boolean,\n\ticon: string,\n\tisEffect?: boolean\n}\n\nexport interface StageStateState {\n\tappliances: ButtonState[];\n}\n\nexport function createInitialState(): StageStateState {\n\treturn {\n\t\tappliances: [\n\t\t\t...((new Array(8)).fill(0).map((t, i) => ({ code: i, name: appliancesNames[i], on: false, icon: 'flare' }))),\n\t\t\t{ code: 9, name: 'Smoke', on: false, icon: 'smoke', isEffect: true },\n\t\t\t{ code: 10, name: 'Flickers', on: false, icon: 'flickers', isEffect: true },\n\t\t\t{ code: 11, name: 'Bubble machine', on: false, icon: 'bubble', isEffect: true },\n\t\t\t{ code: 12, name: 'Flickers & fan', on: false, icon: 'fan', isEffect: true }],\n\n\t};\n}\n\n@StoreConfig({ name: 'stage' })\n@Injectable({ providedIn: 'root' })\nexport class StageStore extends Store<StageStateState> {\n\tconstructor() {\n\t\tsuper(createInitialState());\n\t}\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class StageQuery extends Query<StageStateState> {\n\tconstructor(protected override store: StageStore) {\n\t\tsuper(store);\n\t}\n\n\tall$ = this.select();\n\tappliances$ = this.select('appliances').pipe(map(a => a.filter(({ isEffect }) => !isEffect)));\n\teffects$ = this.select('appliances').pipe(map(a => a.filter(({ isEffect }) => isEffect)));\n\n\tappliance(index: number): Observable<ButtonState> {\n\t\treturn this.appliances$.pipe(map(arr => arr[index]));\n\t}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class StageService {\n\tconstructor(private store: StageStore, private javaService: JavaService) {\n\n\t}\n\n\tsetNewApplianceCode({ name, newCode }: { name: string, newCode: number }) {\n\t\tthis.store.update(state => {\n\t\t\tconst newAppliances = _cloneDeep(state.appliances);\n\t\t\tconst targetAppliance = newAppliances.find(({ name: aNAme }) => name == aNAme);\n\t\t\t// reset same codes for everything else\n\t\t\tnewAppliances.filter(({ code }) => code == newCode).forEach(a => a.code = -1);\n\n\t\t\tif (targetAppliance) {\n\t\t\t\ttargetAppliance.code = newCode;\n\t\t\t}\n\t\t\tthis.javaService.saveCodes(newAppliances.map(({ name, code }) => ({ name, code })));\n\t\t\treturn { ...state, appliances: newAppliances };\n\t\t});\n\t}\n\n\tswitchAppliance(controllerCode: number, status: boolean) {\n\t\tthis.javaService.sendToAndroid(`A${controllerCode}=${status ? 1 : 0}`);\n\t}\n\n\tsetApplianceStatusFromSignal(applianceCode: number, status: string) {\n\t\tthis.store.update(state => {\n\t\t\tconst newAppliances = _cloneDeep(state.appliances);\n\t\t\tconst targetAppliance = newAppliances.find(({ code }) => code == applianceCode);\n\t\t\tif (targetAppliance) {targetAppliance.on = status === '1';}\n\t\t\treturn { ...state, appliances: newAppliances };\n\t\t});\n\n\t}\n\n}\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n\tselector: 'app-code-doalog',\n\ttemplateUrl: './code-doalog.component.html',\n\tstyleUrls: ['./code-doalog.component.scss']\n})\nexport class CodeDoalogComponent implements OnInit {\n\tcode = new FormControl(0, [Validators.max(12), Validators.min(0)]);\n\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef<CodeDoalogComponent>,\n\t\t@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n\tngOnInit(): void {\n\t\tthis.code.setValue(this.data.code);\n\t}\n\n\tclose() {\n\t\tthis.dialogRef.close(+(this.code.value || ''))\n\t}\n\n}\n","<h1 mat-dialog-title>Change code for \"{{data.name}}\"</h1>\n<div mat-dialog-content>\n  <p>Set code</p>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Code</mat-label>\n    <input matInput type=\"number\" [formControl]=\"code\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button  cdkFocusInitial (click)=\"close()\">Ok</button>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { JavaService } from '../../services/java.service';\n\n@Component({\n\tselector: 'app-music',\n\ttemplateUrl: './music.component.html',\n\tstyleUrls: ['./music.component.scss']\n})\nexport class MusicComponent implements OnInit {\n@Input() fullMode: boolean\n\tconstructor(private javaService: JavaService) { }\n@Output() backToStage = new EventEmitter()\n\tngOnInit(): void {\n\n\t}\n\n\tstop() {\n\t\tthis.javaService.sendToAndroid('BB=S');\n\t}\n\n\tplay() {\n\t\tthis.javaService.sendToAndroid('BB=P');\n\t}\n\n\tnext() {\n\t\tthis.javaService.sendToAndroid('BB=N');\n\t}\n\n\teaster() {\n\t\tthis.javaService.sendToAndroid('BB=E');\n\t}\n}\n","<div class=\"title\"  *ngIf=\"fullMode\" (click)=\"backToStage.emit()\">Back to stage</div>\n<div class=\"buttons\">\n  <div class=\"button stop\" (click)=\"stop()\"><svg><use xlink:href=\"#stop\"></use></svg></div>\n  <div class=\"button play\" (click)=\"play()\"><div class=\"bg\"></div><svg><use xlink:href=\"#play\"></use></svg></div>\n  <div class=\"button next\" (click)=\"next()\"><svg><use xlink:href=\"#next\"></use></svg></div>\n  <div *ngIf=\"fullMode\" class=\"button easter\" (click)=\"easter()\"><svg><use xlink:href=\"#easter\"></use></svg></div>\n</div>\n<div class=\"full\"  *ngIf=\"!fullMode\">\n<div class=\"button easter\" (click)=\"easter()\"><svg><use xlink:href=\"#easter\"></use></svg></div>\n</div>\n","import { Component, HostBinding, HostListener, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { StageService } from '../../services/stage-store.service';\nimport { CodeDoalogComponent } from '../code-doalog/code-doalog.component';\n\n@Component({\n\tselector: 'app-stage-button',\n\ttemplateUrl: './stage-button.component.html',\n\tstyleUrls: ['./stage-button.component.scss']\n})\nexport class StageButtonComponent implements OnInit {\n\t@Input() name = 'Button';\n\t@Input() code: number;\n\t@Input() icon: string;\n\t@HostBinding('class.on') @Input() on: boolean;\n\n\tconstructor(private stageService: StageService, private matDialog: MatDialog) { }\n\n\tngOnInit(): void {\n\t}\n\n\tget iconSrc(): string {\n\t\treturn '#' + this.icon;\n\t}\n\n\teditCode() {\n\t\tlet dialogRef = this.matDialog.open(CodeDoalogComponent, {\n\t\t\tdata: { code: this.code, name: this.name }\n\t\t});\n\t\tdialogRef.afterClosed().subscribe(newCode => {\n\t\t\tthis.stageService.setNewApplianceCode({\n\t\t\t\tname: this.name,\n\t\t\t\tnewCode\n\t\t\t});\n\t\t});\n\t}\n\n\tonClick() {\n\t\tthis.stageService.switchAppliance(this.code, !this.on);\n\t}\n\n}\n","<div class=\"circle\" (click)=\"onClick()\">\n  <svg class=\"icon\">\n\n    <use [attr.xlink:href]=\"iconSrc\"></use>\n\n  </svg>\n</div>\n<div class=\"title\">\n  <div>{{name}}</div>\n  <div class=\"code\" [class.error]=\"code===-1\"(click)=\"editCode()\">code {{code > -1 ? code: 'Not set'}} <div class=\"edit\"><svg><use xlink:href=\"#edit\"></use></svg></div></div>\n</div>\n\n","<app-music [fullMode]=\"fullMode\" (backToStage)=\"toFullMode()\"></app-music>\n<div *ngIf=\"!fullMode\" (click)=\"toFullMode()\" class=\"manual-btn\">\n  <div class=\"text\">Manual control</div>\n</div>\n<div *ngIf=\"fullMode\">\n  <div class=\"block\">\n    <div class=\"title\">Lights</div>\n    <div class=\"buttons\">\n      <app-stage-button class=\"btn\" *ngFor=\"let b of buttons$ | async\" [icon]=\"b.icon\" [code]=\"b.code\" [name]=\"b.name\" [on]=\"b.on\"></app-stage-button>\n    </div>\n  </div>\n  <div class=\"block\">\n    <div class=\"title\">Effects</div>\n    <div class=\"buttons\">\n      <app-stage-button class=\"btn\" *ngFor=\"let b of effects$ | async\" [icon]=\"b.icon\" [code]=\"b.code\" [name]=\"b.name\" [on]=\"b.on\"></app-stage-button>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { StageQuery, StageService } from '../services/stage-store.service';\n\n@Component({\n\tselector: 'app-stage',\n\ttemplateUrl: './stage.component.html',\n\tstyleUrls: ['./stage.component.scss']\n})\nexport class StageComponent implements OnInit {\n\tbuttons$ = this.stageQuery.appliances$;\n\teffects$ = this.stageQuery.effects$;\n\tfullMode = false;\n\n\tconstructor(private stageService: StageService, private stageQuery: StageQuery) { }\n\n\tngOnInit(): void {\n\t\t//this.buttons =\n\t\t//\t/console.log(this.buttons);\n\t}\n\n\ttoFullMode() {\n\t\tthis.fullMode = !this.fullMode;\n\t}\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n\n@Component({\n\tselector: 'app-status',\n\ttemplateUrl: './status.component.html',\n\tstyleUrls: ['./status.component.scss']\n})\nexport class StatusComponent implements OnInit {\n\t@Input() isOn: boolean | null = false;\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t}\n\n}\n","<span class=\"status\" [class.on]=\"isOn\" [class.off]=\"!isOn\"></span>\n<span class=\"status-text\">{{isOn ? 'On' : 'Off'}}</span>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss']\n})\nexport class TabsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tabs works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["ChangeDetectorRef","map","Observable","COLORS","i0","ControllerComponent","constructor","flamingQuery","flamingoService","cd","ngOnInit","isOn$","controller$","controllerIndex","pipe","c","isOn","toggleController","selectors","inputs","name","decls","vars","consts","template","ctx","FlamingoComponent","flamingo$","toggleFlamingo","b_r6","b_r7","StageComponent","stageService","stageQuery","appliances$","effects$","toFullMode","fullMode"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}